[{"id":0,"href":"/docs/installation/cli/","title":"Command Line App","section":"Installation","content":" Pre-built Binaries # Pre-built binaries for x64 Windows, Linux and macOS are available on Github.\nmacOS x64 Download https://github.com/yozuk/yozuk/releases/latest/download/zuk-macos-x64.tar.xz Run tar xf zuk-macos-x64.tar.xz Linux x64 Download https://github.com/yozuk/yozuk/releases/latest/download/zuk-linux-x64.tar.xz Run tar xf zuk-linux-x64.tar.xz Windows x64 Download https://github.com/yozuk/yozuk/releases/latest/download/zuk-windows-x64.zip Extract zuk-windows-x64.zip Build from Source # Build Requirements # Rust toolchain: 1.60.0 or later CMake: 3.12 or later From crates.io # cargo install zuk Git Repository # git clone https://github.com/yozuk/yozuk.git cd yozuk/zuk cargo install . Features # rayon (default) - Enables parallelization. rpc (default) - Enables RPC server mode. secure-context (default) - Restricts available system calls for further security. This feature takes effect only on Linux. "},{"id":1,"href":"/docs/installation/chatbot/","title":"Chatbot","section":"Installation","content":" Introduction # We provide chatbot implementations for Telegram and Slack.\nChatbot is not the best option in terms of privacy because the server has access to the conversation between you and the bot in plain text. Telegram # https://github.com/yozuk/yozuk-telegram\nSlack # https://github.com/yozuk/yozuk-slack\n"},{"id":2,"href":"/docs/skills/base64/","title":"Base64","section":"Skills","content":"Base64 Encoder / Decoder\nEncode Base64 # # From text $ zuk \u0026#34;Hello world!\u0026#34; to base64 # From pipe $ zuk base64 \u0026lt; data.txt Decode Base64 # $ zuk SGVsbG8gd29ybGQh Too short text may not be recognized as a Base64 input. "},{"id":3,"href":"/docs/skills/calc/","title":"Calc","section":"Skills","content":"Simple Calculator\nInteger Arithmetic # $ zuk (1 + 2 + 3 + 4) * 5 Decimal Arithmetic # $ zuk 2900401.23365 * 6316714975174469.1697205940 "},{"id":4,"href":"/docs/skills/color/","title":"Color","section":"Skills","content":"Color Converter\nConvert CSS Color Notation # $ zuk \\#ff00ff $ zuk rgb(100, 200, 150) $ zuk rgb(100, 200, 150, .4) $ zuk hsl(150 50% 10%) "},{"id":5,"href":"/docs/skills/dice/","title":"Dice","section":"Skills","content":"Dice Roller\nRoll a die # $ zuk roll dice $ zuk ðŸŽ² Roll three dice # $ zuk roll 3 dice Dice Notation # $ zuk 2d10 $ zuk (2d6 + 4d100) * 2 "},{"id":6,"href":"/docs/skills/digest/","title":"Digest","section":"Skills","content":"Digest calculator\nCalcurate MD5 and SHA-1 # # From text $ zuk \u0026#34;Hello world!\u0026#34; to md5 sha1 # From pipe $ zuk md5 sha1 \u0026lt; data.txt Supported Algorithms # Algorithm Keys MD5 md5 SHA-1 sha1 sha-1 SHA-224 sha-224 sha224 sha2 sha-2 SHA-256 sha-256 sha256 sha2 sha-2 SHA-384 sha-384 sha384 sha2 sha-2 SHA-512 sha-512 sha512 sha2 sha-2 SHA-512/224 sha-512/224 sha512-224 sha2 sha-2 SHA-512/256 sha-512/256 sha512-256 sha2 sha-2 SHA-3-224 sha3-224 sha3 sha-3 SHA-3-256 sha3-256 sha3 sha-3 SHA-3-384 sha3-384 sha3 sha-3 SHA-3-512 sha3-512 sha3 sha-3 Keccak-224 keccak-224 sha3 sha-3 Keccak-256 keccak-256 sha3 sha-3 Keccak-384 keccak-384 sha3 sha-3 Keccak-512 keccak-512 sha3 sha-3 CRC-32/ISO-HDLC crc32 crc-32 crc32-iso crc-32-iso crc-32-iso-hdlc crc-32/iso-hdlc crc32/iso-hdlc crc32/iso BLAKE2-S-256 blake2s256 blake2 BLAKE2-B-512 blake2b512 blake2 BLAKE3 blake3 "},{"id":7,"href":"/docs/skills/geo/","title":"Geo","section":"Skills","content":"Geological Utilities\nDecode Open Location Code # $ zuk 6PH57VP3+PR "},{"id":8,"href":"/docs/skills/lipsum/","title":"Lipsum","section":"Skills","content":"Dummy Text Generator\nGenerate Text # Generates 30 words lorem ipsum by default.\n$ zuk generate lipsum $ zuk lorem ipsum $ zuk dummy text Generate Text with Word Count # $ zuk generate 200 words lipsum $ zuk 200 words lorem ipsum $ zuk dummy text 200 words "},{"id":9,"href":"/docs/skills/nanoid/","title":"NanoID","section":"Skills","content":"NanoID Generator\nGenerate a NanoID # $ zuk nanoid Generate 5 NanoIDs # $ zuk generate 5 nanoid "},{"id":10,"href":"/docs/skills/prime/","title":"Prime","section":"Skills","content":"Prime Number Tester\nTest Primality # $ zuk Is 34534321 a prime number? $ zuk is 37975227936943673922808872755445627854565536638199 prime? If a given integer is larger than \\(2^{32}-1\\) , its primality will be checked by the Millerâ€“Rabin primality test and the result could be a false-positive.\n"},{"id":11,"href":"/docs/skills/punycode/","title":"Punycode","section":"Skills","content":"Punycode Encoder / Decoder\nEncode # This skill detects domain names with non-ASCII characters and encodes them into punycode.\nDomain names must end with TLD listed in https://www.iana.org/domains/root/db.\n$ zuk ðŸŒµðŸŒµðŸŒµ.com Decode # An input string must start with xn--.\n$ zuk xn--3o8h "},{"id":12,"href":"/docs/development/rust/","title":"Rust","section":"Development","content":" Introduction # Yozuk is published as a Rust library, so it\u0026rsquo;s really easy to integrate it with your Rust application.\nyozuk - Core functionality. yozuk-sdk - Types and utilities for development. use yozuk::Yozuk; use yozuk_sdk::prelude::*; let tokens = Tokenizer::new().tokenize(\u0026#34;generate uuid\u0026#34;); let zuk = Yozuk::builder().build(); let commands = zuk.get_commands(\u0026amp;tokens, \u0026amp;[]); if commands.is_empty() { println!(\u0026#34;I can\u0026#39;t understand your request.\u0026#34;); } let result = zuk.run_commands(commands, \u0026amp;mut [], None); Features # default-skills - (default) Uses the default skillset. rayon - Enables parallelization. This feature cannot be used with WebAssembly. "},{"id":13,"href":"/docs/skills/unit/","title":"Unit","section":"Skills","content":"Unit Converter\nConvert Length # # Length $ zuk 2000ft # Weight $ zuk 100lb # Storage Size $ zuk 20.5MiB Supported Units # Type Units Length m nm Âµm mm km in yd ft mi. Weight g ng Âµg mg kg oz. lb Pressure Pa hPa bar atm mmHg Energy J kJ Cal kCal Frequency Hz kHz MHz GHz THz Temperature Â°C Â°F K Speed km/h m/s mph kn. Storage Size B kB MB GB TB KiB MiB GiB TiB "},{"id":14,"href":"/docs/skills/uuid/","title":"UUID","section":"Skills","content":"UUID Generator\nGenerate a UUID # $ zuk uuid Generate 5 UUIDs # $ zuk generate 5 uuid "}]